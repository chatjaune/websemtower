---
- name: Launch an instance on AWS, run Ansible roles on it and then stop it
  hosts: localhost
  gather_facts: False
  vars:
    #my_aws_access_key: 
    #my_aws_secret_key:
    #my_keypair: 
    #my_instance_type:
    #my_security_group: 
    #my_image:
    #my_region:
    #my_vpc_subnet_id:

  tasks:
    - name: Launch instance
      ec2:
        #aws_access_key: "{{ my_aws_access_key }}"
        #aws_secret_key: "{{ my_aws_secret_key }}"
        key_name: "{{ my_keypair }}"
        group: "{{ my_security_group }}"
        instance_type: "{{ my_instance_type }}"
        image: "{{ my_image }}"
        wait: true
        region: "{{ my_region }}"
        vpc_subnet_id: "{{ my_vpc_subnet_id }}"
        assign_public_ip: yes
        instance_tags:
          Name: "{{ my_hostname }}"
      register: ec2

    - name: Add an A record for the new instance
      route53:
        state: present
        zone: "{{ my_dns_zone }}"
        record: "{{ my_hostname }}.{{ my_dns_zone }}"
        type: A
        ttl: 30
        value: "{{ item.public_ip }}"
        wait: yes
      with_items: "{{ ec2.instances }}"

    - name: Add new instance to host group
      add_host:
        hostname: "{{ my_hostname }}.{{ my_dns_zone }}"
        groupname: launched

    - name: Wait for SSH to come up
      delegate_to: "{{ item }}"
      wait_for_connection:
        delay: 10
        timeout: 320
      with_items: "{{groups['launched']}}"

- name: Configure instance
  hosts: launched
  become: True
  gather_facts: True
  tasks:
  - name: Set the hostname of the instance
    hostname:
      name: "{{ my_hostname }}.{{ my_dns_zone }}"

  - name: Set facts for the instance
    set_fact:
      ansible_fqdn: "{{ my_hostname }}.{{ my_dns_zone }}"

  - name: Use a role to set motd file
    include_role:
      name: jtyr.motd

- name: Stop instances
  hosts: localhost
  connection: local
  tasks:
    - name: Stop instances that were previously launched
      ec2:
        state: "stopped"
        instance_ids: "{{ ec2.instance_ids }}"
        region: "{{ my_region }}"
      tags:
      - stop_instance
