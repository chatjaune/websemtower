---
- name: Launch an instance on AWS and run Ansible roles on it
  hosts: localhost
  gather_facts: False
  vars_files:
  - vars/defaults_prov_aws.yml

  tasks:
  - name: Set the project name
    set_fact:
      my_project: my_default_project
    when: my_project == ""

  - name: Launch instance
    ec2:
      #aws_access_key: "{{ my_aws_access_key }}"
      #aws_secret_key: "{{ my_aws_secret_key }}"
      key_name: "{{ my_keypair | default(my_default_keypair) }}"
      instance_type: "{{ my_instance_type | default(my_default_instance_type) }}"
      group: "{{ my_security_group | default(my_default_security_group) }}"
      image: "{{ my_image | default(my_default_image) }}"
      region: "{{ my_region | default(my_default_region) }}"
      vpc_subnet_id: "{{ my_vpc_subnet_id | default(my_default_vpc_subnet_id) }}"
      instance_tags:
        Name: "{{ my_hostname | default(my_default_hostname) }}"
        Project: "{{ my_project | default(my_default_project) | default(omit) }}"
      assign_public_ip: yes
      wait: true
    register: my_new_instance

  - name: Do not assign an Elastic IP
    set_fact:
      elastic_ip_needed: default_elastic_ip_needed
    when: elastic_ip_needed is not defined

  - name: Add elastic IP to the new instance
    ec2_eip:
      region: "{{ my_region | default(my_default_region) }}"
      instance_id: "{{ my_new_instance.instance_ids }}"
    when: elastic_ip_needed
    register: my_new_eip

  # - name: Tag the volume of the new instance
  #   ec2_tag:
  #     region: "{{ my_region }}"
  #     state: present
  #     resource: "{{ my_new_eip. }}"
  #     tags:
  #       Name: "{{ my_hostname | default(my_default_hostname) }}"
  #       Project: "{{ my_project | default(my_default_project) | default(omit) }}"
  #   when: elastic_ip_needed

  - name: Add a DNS record (A) for the new instance
    route53:
      state: present
      zone: "{{ my_dns_zone | default(my_default_zone)}}"
      record: "{{ item.tags.Name }}.{{ my_dns_zone | default(my_default_zone) }}"
      value: "{{ item.public_ip }}"
      type: A
      ttl: 30
      #wait: yes # No to don't wait until the changes have been replicated to all Amazon Route 53 DNS servers
    loop: "{{ my_new_instance.instances }}"
    when: my_dns_zone is defined

  - name: Add new instance to the on-memory Inventory
    add_host:
      hostname: "{{ item.tags.Name }}.{{ my_dns_zone | default(my_default_zone) }}"
      groups: launched
    loop: "{{ my_new_instance.instances }}"
    when: my_dns_zone is defined

  - name: Add new instance to the on-memory Inventory
    add_host:
      hostname: "{{ item.public_dns_name }}"
      groups: launched
    loop: "{{ my_new_instance.instances }}"
    when: my_dns_zone is not defined
  
  - name: Wait for SSH to come up
    delegate_to: "{{ item }}"
    wait_for_connection:
      delay: 10
      timeout: 320
    loop: "{{ groups['launched'] }}"

- name: Configure instance
  hosts: launched
  become: True
  gather_facts: True
  tasks:
  - name: Execute post tasks for Linux Hosts
    include_tasks: tasks/prov_aws-post_linux.yml
    when: ansible_system == "Linux"

  - name: Execute post tasks for Windows Hosts
    include_tasks: tasks/prov_aws-post_windows.yml
    when: ansible_system == "Windows"
