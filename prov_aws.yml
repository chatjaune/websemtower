---
- name: Launch an instance on AWS, run Ansible roles on it and then stop it
  hosts: localhost
  gather_facts: False
  vars:
    # For Ansible Tower or AWX, these have to be defined in surveys
    #my_aws_access_key: 
    #my_aws_secret_key:
    #my_keypair: 
    #my_instance_type:
    #my_security_group: 
    #my_image:
    #my_region:
    #my_vpc_subnet_id:
    #my_hostname:
    #my_dns_zone:
    #my_project:
    #elastic_ip_needed:
    #my_ansible_roles:
    motd_ascii_art: |-2
                  _ _           _
                 | | |         | |
     _ __ ___  __| | |__   __ _| |_
    | '__/ _ \/ _` | '_ \ / _` | __|
    | | |  __/ (_| | | | | (_| | |_
    |_|  \___|\__,_|_| |_|\__,_|\__|

  tasks:
    - name: Launch instance
      ec2:
        #aws_access_key: "{{ my_aws_access_key }}"
        #aws_secret_key: "{{ my_aws_secret_key }}"
        key_name: "{{ my_keypair }}"
        group: "{{ my_security_group }}"
        instance_type: "{{ my_instance_type }}"
        image: "{{ my_image }}"
        wait: true
        region: "{{ my_region }}"
        vpc_subnet_id: "{{ my_vpc_subnet_id }}"
        assign_public_ip: yes
        instance_tags:
          Name: "{{ my_hostname }}"
          Project: "{{ my_project }}"
      register: my_new_instance

    - name: Add elastic IP to the new instance
      ec2_eip:
        region: "{{ my_region }}"
        instance_id: "{{ my_new_instance.instance_ids }}"
        allow_reassociation: yes
      when: elastic_ip_needed
      register: my_new_eip

    # - name: Tag the volume of the new instance
    #   ec2_tag:
    #     region: "{{ my_region }}"
    #     state: present
    #     resource: "{{ my_new_eip. }}"
    #     tags:
    #       Name: "{{ my_hostname }}"
    #       Project: "{{ my_project }}"

    - name: Add an A record for the new instance
      route53:
        state: present
        zone: "{{ my_dns_zone }}"
        record: "{{ item.tags.Name }}.{{ my_dns_zone }}"
        type: A
        ttl: 30
        value: "{{ item.public_ip }}"
        wait: yes
      loop: "{{ my_new_instance.instances }}"

    - name: Add new instance to host group
      add_host:
        hostname: "{{ my_hostname }}.{{ my_dns_zone }}"
        groupname: launched

    - name: Wait for SSH to come up
      delegate_to: "{{ item }}"
      wait_for_connection:
        delay: 10
        timeout: 320
      loop: "{{groups['launched']}}"

- name: Configure instance
  hosts: launched
  become: True
  gather_facts: True
  tasks:
  - name: Set the hostname of the instance
    hostname:
      name: "{{ my_hostname }}.{{ my_dns_zone }}"

  - name: Set facts for the instance
    set_fact:
      ansible_fqdn: "{{ my_hostname }}.{{ my_dns_zone }}"

  - name: Deploy Ansible roles
    include_role:
      name: "{{ item }}"
    loop: "{{ my_ansible_roles }}"

- name: Stop instances
  hosts: localhost
  connection: local
  tasks:
    - name: Stop instances that were previously launched
      ec2:
        state: "stopped"
        instance_ids: "{{ ec2.instance_ids }}"
        region: "{{ my_region }}"
      tags:
      - stop_instance
